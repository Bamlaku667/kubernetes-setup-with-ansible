- name: Push kubeadm ClusterConfiguration to master
  template:
    src: kubeadm-config.yaml.j2
    dest: "{{ kubeadm_config_path }}"
    owner: root
    group: root
    mode: '0644'

- name: Initialize first control plane
  command: kubeadm init --config {{ kubeadm_config_path }} --upload-certs
  args:
    creates: /etc/kubernetes/admin.conf
  register: kubeadm_init
  when: inventory_hostname == groups['masters'][0]

- name: Create kube config directory for user
  file:
    path: /home/supapp/.kube
    state: directory
    owner: supapp
    group: supapp
    mode: '0755'
  when: inventory_hostname == groups['masters'][0]

- name: Copy admin.conf to user kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/supapp/.kube/config
    remote_src: yes
    owner: supapp
    group: supapp
    mode: '0644'
  when: inventory_hostname == groups['masters'][0]

- name: Generate join command for workers
  command: kubeadm token create --print-join-command
  register: join_command
  changed_when: false
  when: inventory_hostname == groups['masters'][0]

- name: Store worker join command
  set_fact:
    kubeadm_join_cmd: "{{ join_command.stdout }}"
  when: inventory_hostname == groups['masters'][0]

- name: Generate join command for control-plane nodes
  shell: kubeadm token create --print-join-command && kubeadm init phase upload-certs --upload-certs
  register: cp_join
  changed_when: false
  when: inventory_hostname == groups['masters'][0]

- name: Save control-plane join command
  set_fact:
    kubeadm_cp_join_cmd: "{{ cp_join.stdout }}"
  when: inventory_hostname == groups['masters'][0]

- name: Join additional masters to cluster
  command: "{{ hostvars[groups['masters'][0]].kubeadm_cp_join_cmd }}"
  args:
    creates: /etc/kubernetes/kubelet.conf
  when: inventory_hostname != groups['masters'][0]
