- name: Download containerd archive
  get_url:
    url: "https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz"
    dest: "/tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz"
    mode: '0644'
  tags: containerd

- name: Extract containerd archive
  unarchive:
    src: "/tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz"
    dest: /usr/local
    remote_src: yes
  tags: containerd

- name: Create containerd systemd service file
  copy:
    dest: /etc/systemd/system/containerd.service
    mode: '0644'
    content: |
      [Unit]
      Description=containerd container runtime
      Documentation=https://containerd.io
      After=network.target local-fs.target

      [Service]
      ExecStart=/usr/local/bin/containerd
      Restart=always
      RestartSec=5
      Delegate=yes
      KillMode=process
      LimitNOFILE=1048576
      LimitNPROC=infinity
      LimitCORE=infinity
      TasksMax=infinity
      OOMScoreAdjust=-999

      [Install]
      WantedBy=multi-user.target
  tags: containerd

- name: Ensure containerd config directory exists
  file:
    path: /etc/containerd
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags: containerd

# remote the default config first if any 
# - name: Remove existing containerd config if any
#   file:
#     path: "{{ containerd_config_path }}"
#     state: absent
#   tags: containerd

# - name: Generate default containerd config if missing
#   shell: "{{ containerd_bin_dir }}/containerd config default > {{ containerd_config_path }}"
#   args:
#     creates: "{{ containerd_config_path }}"
#   tags: containerd

# - name: Set runtime_type to io.containerd.runc.v2
#   replace:
#     path: "{{ containerd_config_path }}"
#     regexp: '^\s*runtime_type = ".*"$'
#     replace: '  runtime_type = "io.containerd.runc.v2"'
#   tags: containerd



- name: Ensure containerd service is enabled and started
  systemd:
    name: containerd
    enabled: yes
    state: restarted
    daemon_reload: yes
  tags: containerd

- name: Ensure containerd socket exists
  stat:
    path: /var/run/containerd/containerd.sock
  register: containerd_socket
  failed_when: not containerd_socket.stat.exists
  retries: 10
  delay: 5
  until: containerd_socket.stat.exists
  tags: containerd

# - name: Enable SystemdCgroup in containerd configuration
#   ansible.builtin.lineinfile:
#     path: /etc/containerd/config.toml
#     regexp: '^\s*SystemdCgroup\s*=\s*false'
#     line: '            SystemdCgroup = true'
#     insertafter: '^\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]$'
#     state: present
#   notify: Restart containerd


