---
- name: 1. INITIALIZE KUBERNETES AND DEPLOY CNI ON FIRST MASTER
  hosts: k8s-master1
  become: true

  tasks:
    - name: Ensure sysctl for bridge networking is set (required for K8s)
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present
        reload: yes

    - name: Ensure /etc/containerd exists (just in case)
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Create kubeadm config file (ClusterConfiguration + InitConfiguration)
      copy:
        dest: "{{ kubeadm_config_path }}"
        content: |
          apiVersion: kubeadm.k8s.io/v1beta4
          kind: InitConfiguration
          localAPIEndpoint:
            advertiseAddress: "{{ hostvars[inventory_hostname].ansible_host }}"
            bindPort: 6443
          nodeRegistration:
            name: "{{ inventory_hostname }}"
            criSocket: unix:///run/containerd/containerd.sock 
          ---
          apiVersion: kubeadm.k8s.io/v1beta4
          kind: ClusterConfiguration
          kubernetesVersion: "v{{ kubernetes_version }}"
          controlPlaneEndpoint: "{{ control_plane_endpoint }}"
          networking:
            podSubnet: "{{ pod_network_cidr }}"
            serviceSubnet: "{{ service_cidr }}"
            dnsDomain: "{{ dns_domain }}"

    - name: Run kubeadm init (first master)
      command: kubeadm init --config="{{ kubeadm_config_path }}" --upload-certs
      register: kubeadm_init
      ignore_errors: no

    - name: Save kubeadm init output to a file
      copy:
        dest: /var/log/kubeadm-init.log
        content: "{{ kubeadm_init.stdout }}\n{{ kubeadm_init.stderr }}"
        owner: root
        group: root
        mode: '0644'

    - name: Show kubeadm init output
      debug:
        msg: "{{ kubeadm_init.stdout }}\n{{ kubeadm_init.stderr }}"

    - name: Ensure kube config dir for getfee exists
      file:
        path: /home/getfee/.kube
        state: directory
        owner: getfee
        group: getfee
        mode: '0755'

    - name: Copy admin.conf to getfee kube config if it exists
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/getfee/.kube/config
        remote_src: yes
        owner: getfee
        group: getfee
        mode: '0644'
      when: kubeadm_init.rc == 0 and ansible_stat.exists
      vars:
        ansible_stat: "{{ lookup('ansible.builtin.stat', '/etc/kubernetes/admin.conf', wantlist=False) }}"
